{"version":3,"sources":["assets/img/wave.svg","assets/img/play.svg","assets/img/pause.svg","assets/img/readed.svg","assets/img/noreaded.svg","redux/reducers/dialogs.js","redux/reducers/index.js","redux/store.js","components/Button/index.js","components/Block/index.js","utils/helpers/validateField.js","components/Message/index.js","utils/helpers/convertCurrentTime.js","components/Messages/index.js","components/DialogItem/index.js","components/Time/index.js","components/IconReaded/index.js","components/Dialogs/index.js","components/Avatar/index.js","utils/helpers/generateAvatarFromHash.js","components/Status/index.js","components/ChatInput/index.js","modules/LoginForm/components/LoginForm.jsx","utils/validate.js","modules/LoginForm/index.js","modules/LoginForm/containers/LoginForm.js","modules/RegisterForm/components/RegisterForm.jsx","modules/RegisterForm/index.js","modules/RegisterForm/containers/RegisterForm.js","pages/Auth/index.jsx","core/axios.js","utils/api/dialogs.js","redux/actions/dialogs.js","containers/Dialogs.js","pages/Home/index.jsx","App.js","index.js"],"names":["module","exports","initialState","items","combineReducers","dialogs","state","type","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","rootReducer","applyMiddleware","Button","props","className","classNames","size","Block","children","key","touched","errors","MessageAudio","audioSrc","useState","isPlaying","setIsPlaying","progress","setProgress","currentTime","setCurrentTime","audioElem","useRef","useEffect","current","volume","addEventListener","duration","ref","src","preload","style","width","onClick","pause","play","pauseSvg","alt","playSvg","waveSvg","number","mins","Math","floor","secs","toFixed","convertCurrentTime","Message","avatar","user","text","date","audio","isMe","isReaded","attachments","isTyping","length","fullname","map","item","url","filename","defaultProps","Messages","Date","falename","description","DialogItem","unreaded","created_at","ClassNames","isOnline","isToday","format","getMessageTime","Time","formatDistanceToNow","addSuffix","locale","ruLocale","IconReaded","readedSvg","noReadedSvg","Dialogs","userId","onSearch","inputValue","Search","value","placeholder","onChange","e","target","orderBy","_id","image","Empty","PRESENTED_IMAGE_SIMPLE","Avatar","hash","substr","split","char","charCodeAt","r","g","b","color","tinycolor","lighten","saturate","toHexString","colorLighten","generateAvatarFromHash","firstChar","toUpperCase","background","Status","online","ChatInput","setValue","shape","icon","event","LoginForm","values","handleChange","handleBlur","handleSubmit","onSubmit","Item","validateStatus","validateField","help","email","hasFeedback","prefix","id","onBlur","password","htmlType","to","isAuth","rules","test","Object","keys","forEach","withFormik","enableReinitialize","mapPropsToValues","validate","validateForm","setSubmitting","setTimeout","alert","JSON","stringify","displayName","RegisterForm","rePassword","Auth","exact","path","component","axios","defaults","baseURL","get","actions","setDialogs","fetchDialogs","dispatch","dialogsApi","then","data","connect","dialogsActions","Array","from","filtred","setFiltredItems","filter","dialog","toLowerCase","indexOf","Home","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c183ae1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wave.2b8196a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.3a10db5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.a61933e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/readed.c1f419d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/noreaded.3c841bf6.svg\";","const initialState = {\n    items: []\n};\n\nexport default (state = initialState, {type, payload}) => {\n    switch (type) {\n        case 'DIALOGS:SET_ITEMS':\n            return {\n                items: payload\n            };\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\nimport dialogs from \"./dialogs\";\n\nexport default combineReducers({\n    dialogs\n});","import {applyMiddleware, createStore, compose} from \"redux\";\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(...middleware))\n);\n\nexport default store;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Button as BaseButton} from \"antd\";\nimport './Button.scss';\nimport classNames from 'classnames';\n\nconst Button = (props) => {\n    return (\n            <BaseButton\n                {...props}\n                className={classNames('button', props.className, {'button--large': props.size === 'large'})}\n            />\n    )\n};\n\nButton.propTypes = {\n    className: PropTypes.string\n};\n\nexport default Button;","import React from 'react';\nimport './Block.scss';\nimport classNames from 'classnames';\n\nconst Block = ({children, className}) => {\n    return (\n        <div className={classNames('block', className)}>\n            {children}\n        </div>\n    )\n};\n\n\n\nexport default Block;","export default (key, touched, errors) => {\n    if (touched[key]){\n        if (errors[key]) {\n            return 'error'\n        } else {\n            return 'success'\n        }\n    } else {\n        return ''\n    }\n};","import React, {useState, useRef, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport './Message.scss';\nimport classNames from 'classnames';\nimport {IconReaded, Time} from './../index'\nimport waveSvg from '../../assets/img/wave.svg';\nimport playSvg from '../../assets/img/play.svg';\nimport pauseSvg from '../../assets/img/pause.svg';\nimport {convertCurrentTime} from \"../../utils/helpers\";\n\nconst MessageAudio = ({audioSrc}) => {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [currentTime, setCurrentTime] = useState(0);\n\n    const audioElem = useRef(null);\n\n    const togglePlay = () => {\n        if (!isPlaying) {\n            audioElem.current.play();\n        } else {\n            audioElem.current.pause();\n        }\n    };\n\n    useEffect(() => {\n            audioElem.current.volume = \"0.01\";\n            audioElem.current.addEventListener('playing', () => {\n                setIsPlaying(true)\n            }, false);\n            audioElem.current.addEventListener('ended', () => {\n                setIsPlaying(false);\n                setProgress(0);\n                setCurrentTime(0);\n            }, false);\n            audioElem.current.addEventListener('pause', () => {\n                setIsPlaying(false)\n            }, false);\n            audioElem.current.addEventListener('timeupdate', () => {\n                const duration = audioElem.current && audioElem.current.duration || 0;\n                setCurrentTime(audioElem.current.currentTime);\n                setProgress((audioElem.current.currentTime / duration) * 100);\n            }, false);\n        }, []\n    );\n\n    return (\n        <div className=\"message__audio\">\n            <audio ref={audioElem} src={audioSrc} preload={'auto'}/>\n            <div className=\"message__audio-progress\"\n                 style={{width: progress + \"%\"}}\n            />\n            <div className=\"message__audio-info\">\n                <div className=\"message__audio-btn\">\n                    <button onClick={togglePlay}>\n                        {isPlaying ? <img src={pauseSvg} alt=\"pause\"/>\n                            : <img src={playSvg} alt=\"play\"/>}\n                    </button>\n                </div>\n                <div className=\"message__audio-wave\">\n                    <img src={waveSvg} alt=\"wave\"/>\n                </div>\n                <span className='message__audio-duration'>\n                    {convertCurrentTime(currentTime)}\n                </span>\n            </div>\n        </div>\n    )\n};\n\nconst Message = ({\n                     avatar,\n                     user,\n                     text,\n                     date,\n                     audio,\n                     isMe,\n                     isReaded,\n                     attachments,\n                     isTyping\n                 }) => {\n\n    return (\n        <div className={classNames(\"message\", {\n            \"message--isme\": isMe,\n            'message--is-typing': isTyping,\n            'message--is-audio': audio,\n            'message--image': attachments && attachments.length === 1\n        })}>\n            <div className=\"message__content\">\n                <IconReaded isMe={isMe} isReaded={isReaded}/>\n                <div className=\"message__avatar\">\n                    <img src={avatar} alt={`Avatar ${user.fullname}`}/>\n                </div>\n                <div className=\"message__info\">\n                    {(audio || text || isTyping) && (\n                        <div className=\"message__bubble\">\n                            {text && <p className=\"message__text\">{text}</p>}\n                            {isTyping && (\n                                <div className=\"message__typing\">\n                                    <span/>\n                                    <span/>\n                                    <span/>\n                                </div>\n                            )}\n                            {audio && <MessageAudio audioSrc={audio}/>}\n                        </div>\n                    )}\n                    {attachments &&\n                    <div className=\"message__attachments\">\n                        {attachments.map(item => (\n                            <div key={item.url} className=\"message__attachments-item\">\n                                <img src={item.url} alt={item.filename}/>\n                            </div>\n                        ))}\n                    </div>\n                    }\n                    {date &&\n                    <span className=\"message__date\">\n                        <Time date={date}/>\n                    </span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nMessage.defaultProps = {\n    user: {}\n};\n\nMessage.propTypes = {\n    isMe: PropTypes.bool,\n    isReaded: PropTypes.bool,\n    avatar: PropTypes.string,\n    text: PropTypes.string,\n    created_at: PropTypes.string,\n    user: PropTypes.object,\n    attachments: PropTypes.array,\n    isTyping: PropTypes.bool,\n    audio: PropTypes.string,\n};\n\nexport default Message;","export default number => {\n    const mins = Math.floor(number / 60);\n    const secs = (number % 60).toFixed();\n    return `${mins < 10 ? \"0\" : \"\"}${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Message} from \"../../components\";\nimport {Empty} from \"antd\";\n\n\nconst Messages = ({items}) => {\n    return items ? (\n        <div>\n            <Message avatar={'https://sun1-87.userapi.com/c852016/v852016997/1b674f/ybYJetYzEIk.jpg?ava=1'}\n                     isMe={false}\n                     date={new Date()}\n                     audio={'https://notificationsounds.com/soundfiles/069059b7ef840f0c74a814ec9237b6ec/file-de_vuvuzela-power-down.wav'}\n            />\n            <Message avatar={'https://sun1-87.userapi.com/c852016/v852016997/1b674f/ybYJetYzEIk.jpg?ava=1'}\n                     text={'Салам, Брут! Чё, как, уничтожил флот галлов? 🖐🏻'}\n                     date={new Date()}\n                     attachments={[\n                         {\n                             falename: 'image.jpg',\n                             url: 'http://source.unsplash.com/100x100/?random-1&nature,water'\n                         },\n                         {\n                             falename: 'image.jpg',\n                             url: 'http://source.unsplash.com/100x100/?random-2&nature,water'\n                         },\n                         {\n                             falename: 'image.jpg',\n                             url: 'http://source.unsplash.com/100x100/?random-3&nature,water'\n                         }\n                     ]}\n                     isMe={false}\n\n            />\n            <Message avatar={'https://sun9-38.userapi.com/c846321/v846321172/10d6d6/eWA_JGAyu68.jpg?ava=1'}\n                     text={'Салам, брат Цезарь!'}\n                     date={new Date()}\n                     isMe={true}\n                     isReaded={false}\n            />\n            <Message avatar={'https://sun1-87.userapi.com/c852016/v852016997/1b674f/ybYJetYzEIk.jpg?ava=1'}\n                     attachments={[\n                         {\n                             falename: 'image.jpg',\n                             url: 'http://source.unsplash.com/100x100/?random-1&nature,water'\n                         }\n                     ]}\n                     isMe={false}\n            />\n            <Message avatar={'https://sun1-87.userapi.com/c852016/v852016997/1b674f/ybYJetYzEIk.jpg?ava=1'}\n                     isTyping\n                     isMe={false}\n            />\n        </div>\n    ) : <Empty description={\"Начните чат\"}/>\n};\n\nMessages.propTypes = {\n    items: PropTypes.array\n};\n\nexport default Messages;\n","import React from 'react';\nimport ClassNames from 'classnames';\nimport './DialogItem.scss';\nimport {IconReaded, Avatar} from './../index';\nimport format from 'date-fns/format';\nimport isToday from 'date-fns/isToday';\n\n\nconst getMessageTime = created_at => {\n    if (isToday(new Date(created_at))) {\n        return format(new Date(created_at), \"HH:mm\")\n    } else {\n        return format(new Date(created_at), \"dd.MM.yy\")\n    }\n};\n\nconst DialogItem = ({user, unreaded, isMe, created_at, text}) => (\n    <div className={ClassNames('dialogs__item', {\n        'dialogs__item--online': user.isOnline\n    })}>\n        <div className=\"dialogs__item-avatar\">\n            <Avatar user={user}/>\n        </div>\n        <div className=\"dialogs__item-info\">\n            <div className=\"dialogs__item-info-top\">\n                <b>{user.fullname}</b>\n                <span>\n                    {getMessageTime(created_at)}\n                </span>\n            </div>\n            <div className=\"dialogs__item-info-bottom\">\n                <p>{text}</p>\n                {isMe && <IconReaded isMe={true} isReaded={true}/>}\n                {unreaded > 0 &&\n                <div className=\"dialogs__item-info-bottom-count\">\n                    {unreaded}\n                </div>}\n            </div>\n        </div>\n    </div>\n);\n\nexport default DialogItem;\n\n\n","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\nimport ruLocale from 'date-fns/locale/ru';\n\nconst Time = ({date}) => (\n    <Fragment>\n        {formatDistanceToNow(date, {addSuffix: true, locale: ruLocale})}\n    </Fragment>\n);\n\nTime.propTypes = {\n    date: PropTypes.object\n};\n\nexport default Time;\n\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport readedSvg from \"./../../assets/img/readed.svg\";\nimport noReadedSvg from \"./../../assets/img/noreaded.svg\";\n\nconst IconReaded = ({isMe, isReaded}) =>\n    isMe && (\n        isReaded ? (\n            <img className={'message__icon-readed'}\n                 src={readedSvg}\n                 alt=\"readedSvg\"/>\n        ) : (\n            <img className={'message__icon-readed'}\n                 src={noReadedSvg}\n                 alt=\"noreadedSvg\"/>\n        ));\n\nIconReaded.propTypes = {\n    isMe: PropTypes.bool,\n    isReaded: PropTypes.bool,\n};\n\nexport default IconReaded;\n","import React from 'react';\nimport {DialogItem} from \"../index\";\nimport orderBy from 'lodash/orderBy';\nimport {Input, Empty} from \"antd\";\n\n\nconst Dialogs = ({items, userId, onSearch, inputValue}) => (\n    <div className=\"dialogs\">\n        <div className=\"dialogs__search\">\n            <Input.Search\n                value={inputValue}\n                placeholder=\"Поиск среди контактов\"\n                onChange={e => onSearch(e.target.value)}\n            />\n        </div>\n        {items.length > 0\n            ? orderBy(items, [\"created_at\"], [\"desc\"])\n                .map(item => (\n                    <DialogItem\n                        key={item._id}\n                        isMe={item.user._id === userId}\n                        {...item}\n                    />\n                ))\n            : <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={\"Диалога нет\"} />\n        }\n    </div>\n);\n\nexport default Dialogs;\n\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { generateAvatarFromHash } from \"../../utils/helpers\";\n\nimport \"./Avatar.scss\";\n\nconst Avatar = ({ user }) => {\n    if (user.avatar) {\n        return (\n            <img\n                className=\"avatar\"\n                src={user.avatar}\n                alt={`Avatar ${user.fullname}`}\n            />\n        );\n    } else {\n        const { color, colorLighten } = generateAvatarFromHash(user._id);\n        const firstChar = user.fullname[0].toUpperCase();\n        return (\n            <div\n                style={{\n                    background: `linear-gradient(135deg, ${color} 0%, ${colorLighten} 96.52%)`\n                }}\n                className=\"avatar avatar--symbol\"\n            >\n                {firstChar}\n            </div>\n        );\n    }\n};\n\nAvatar.propTypes = {\n    className: PropTypes.string\n};\n\nexport default Avatar;\n","import tinycolor from \"tinycolor2\";\n\nconst getCorrectIndex = number => {\n    return number > 255 ? 255 : number < 0 ? 0 : number;\n};\n\nexport default (hash) => {\n    const [r, g, b] = hash\n        .substr(0, 3)\n        .split(\"\")\n        .map(char => getCorrectIndex(char.charCodeAt(0)));\n    return {\n        color: tinycolor({r, g, b}).lighten(10).saturate(30).toHexString(),\n        colorLighten: tinycolor({r, g, b}).lighten(40).toHexString()\n    };\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport \"./Status.scss\";\n\nconst Status = ({online}) => {\n    return (\n        <span className={classNames(\"status\", {\"status--online\": online})}>\n                {online ? 'онлайн' : 'офлайн'}\n            </span>\n    );\n};\n\nStatus.propTypes = {\n    online: PropTypes.bool\n};\n\nexport default Status;\n","import React, {useState} from 'react';\nimport {Button, Input} from \"antd\";\nimport \"./Chatinput.scss\";\n\nconst ChatInput = () => {\n    const [value, setValue] = useState(\"\");\n\n    return (\n        <div className={'chat-input'}>\n            <div className=\"chat-input__smile-btn\">\n                <Button type={\"link\"} shape={\"circle\"} icon=\"smile\"/>\n            </div>\n            <Input\n                placeholder=\"Введите текст сообщения...\"\n                // onSearch={value => console.log(value)}\n                size={\"large\"}\n                onChange={event => setValue(event.target.value)}\n            />\n            <div className=\"chat-input__actions\">\n                <Button type={\"link\"} shape={\"circle\"} icon={\"camera\"}/>\n                {value\n                    ? <Button type={\"link\"} shape={\"circle\"} icon=\"check-circle\"/>\n                    : <Button type={\"link\"} shape={\"circle\"} icon=\"audio\"/>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default ChatInput;\n","import React from 'react';\nimport {Form, Icon, Input} from 'antd';\nimport {Link} from 'react-router-dom';\nimport {Block, Button} from \"../../../components\";\nimport {validateField} from \"../../../utils/helpers\";\n\nconst LoginForm = (props) => {\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n    } = props;\n    return (\n        <div>\n            <div className={'auth__top'}>\n                <h2>Войти в аккаунт</h2>\n                <p>Пожалуйста, войдите в свой аккаунт</p>\n            </div>\n            <Block>\n                <Form onSubmit={handleSubmit} className=\"login-form\">\n                    <Form.Item\n                        validateStatus={validateField('email', touched, errors)}\n                        help={!touched.email ? '' : errors.email}\n                        hasFeedback\n                    >\n                        <Input\n                            prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                            placeholder=\"Username\"\n                            size=\"large\"\n                            id={'email'}\n                            value={values.email}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        validateStatus={validateField('password', touched, errors)}\n                        help={!touched.password ? '' : errors.password}\n                        hasFeedback\n                    >\n                        <Input\n                            prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                            type=\"password\"\n                            placeholder=\"Пароль\"\n                            size=\"large\"\n                            id={'password'}\n                            value={values.password}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" size={'large'}>\n                            Войти в аккаунт\n                        </Button>\n                    </Form.Item>\n                    <Link className={'auth__register-link'} to={'/register'}>\n                        Зарегистрироваться\n                    </Link>\n                </Form>\n            </Block>\n        </div>\n    )\n};\n\nexport default LoginForm;","export default ({isAuth, values, errors}) => {\n    const rules = {\n        email: (value) => {\n            if (!value) {\n                errors.email = 'Введите адрес';\n            } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n                errors.email = 'Введите корректный адрес';\n            }\n        },\n        password: (value) => {\n            if (!value) {\n                errors.password = 'Введите пароль';\n            } else if (!/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}/i.test(value)) {\n                errors.password = isAuth ? 'Неверный пароль' : 'Слишком легкий пароль';\n            }\n        },\n        /*rePassword: (value, values) => {\n            if (!value) {\n                errors.rePassword = 'Введите пароль';\n            }\n            if (values.password !== value) {\n                errors.rePassword = 'Пароли не совпадают';\n            }\n        }*/\n    };\n\n    Object.keys(values).forEach(key => // достаем все ключи из объекта и прменяем для каждого функцию\n        rules[key] && rules[key](values[key]) // если такой ключ есть, то применить функцию\n    )\n};","import LoginForm from './containers/LoginForm';\n\nexport default LoginForm","import {withFormik} from 'formik';\nimport LoginForm from '../components/LoginForm';\nimport validateForm from '../../../utils/validate';\n\n\nexport default withFormik({\n    enableReinitialize: true,\n    mapPropsToValues: () => ({\n        email: '',\n        password: '',\n    }),\n    validate: values => {\n        let errors = {};\n\n        validateForm({isAuth: false, values, errors});\n\n        return errors;\n    },\n\n    handleSubmit: (values, {setSubmitting}) => {\n        setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n        }, 1000);\n    },\n\n    displayName: 'RegisterForm',\n})(LoginForm);\n\n","import React from 'react';\nimport {Form, Icon, Input} from 'antd';\nimport {Link} from 'react-router-dom';\nimport {Block, Button} from \"../../../components\";\nimport {validateField} from \"../../../utils/helpers\";\n\nconst success = false;\n\nconst RegisterForm = (props) => {\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n    } = props;\n    return (\n        <div>\n            <div className={'auth__top'}>\n                <h2>Регистрация</h2>\n                <p>Для входа в чат, вам нужно зарегистрироваться</p>\n            </div>\n            <Block>\n                {!success\n                    ? (\n                        <Form onSubmit={handleSubmit} className=\"login-form\">\n                            <Form.Item\n                                validateStatus={validateField('email', touched, errors)}\n                                help={!touched.email ? '' : errors.email}\n                                hasFeedback\n                            >\n                                <Input\n                                    id={'email'}\n                                    prefix={<Icon type=\"mail\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    placeholder=\"E-mail\"\n                                    size=\"large\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                            </Form.Item>\n                            <Form.Item>\n                                <Input\n                                    prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    placeholder=\"Ваше имя\"\n                                    size=\"large\"\n                                />\n                            </Form.Item>\n                            <Form.Item\n                                validateStatus={validateField('password', touched, errors)}\n                                help={!touched.password ? '' : errors.password}\n                                hasFeedback\n                            >\n                                <Input\n                                    prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    type=\"password\"\n                                    placeholder=\"Пароль\"\n                                    size=\"large\"\n                                    id={'password'}\n                                    value={values.password}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                            </Form.Item>\n                            <Form.Item\n                                validateStatus={validateField('password', touched, errors)}\n                                help={!touched.password ? '' : errors.password}\n                                hasFeedback\n                            >\n                                <Input\n                                    prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    type=\"password\"\n                                    placeholder=\"Повторите пароль\"\n                                    size=\"large\"\n                                    // id={'rePassword'}\n                                    // value={values.rePassword}\n                                    // onChange={handleChange}\n                                    // onBlur={handleBlur}\n                                />\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\"\n                                        htmlType=\"submit\"\n                                        size={'large'}\n                                        onClick={handleSubmit}\n                                >\n                                    Зарегистрироваться\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Link className={'auth__register__link'} to={'/login'}>Войти в аккаунт</Link>\n                            </Form.Item>\n                        </Form>)\n                    : <div className={'auth__success-block'}>\n                        <div>\n                            <Icon style={{fontSize: '48px'}} type=\"exclamation-circle\" theme=\"twoTone\"/>\n                        </div>\n                        <h2>Подтвердите свой аккаунт</h2>\n                        <p>На вашу почту отправлено письмо со ссылкой на подтверждение аккаунта</p>\n                    </div>}\n            </Block>\n        </div>\n    )\n};\n\nexport default RegisterForm;","import RegisterForm from './containers/RegisterForm';\n\nexport default RegisterForm","import {withFormik} from 'formik';\nimport RegisterForm from '../components/RegisterForm';\nimport validateForm from '../../../utils/validate';\n\n\nexport default withFormik({\n    enableReinitialize: true,\n    mapPropsToValues: () => ({\n        email: '',\n        fullname: '',\n        password: '',\n        rePassword: ''\n    }),\n    validate: values => {\n        let errors = {};\n\n        validateForm({isAuth: false, values, errors});\n\n        return errors;\n    },\n\n    handleSubmit: (values, {setSubmitting}) => {\n        setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n        }, 1000);\n    },\n\n    displayName: 'RegisterForm',\n})(RegisterForm);","import React from 'react';\nimport {Route} from \"react-router-dom\";\nimport {LoginForm, RegisterForm} from \"../../modules\";\nimport './Auth.scss'\n\nconst Auth = () => {\n    return (\n        <section className={'auth'}>\n            <div className={'auth__content'}>\n                <Route exact path={[\"/\", \"/login\"]} component={LoginForm}/>\n                <Route exact path={'/register'} component={RegisterForm}/>\n            </div>\n        </section>\n    )\n};\n\nexport default Auth;\n\n\n\n\n","import axios from 'axios';\n\naxios.defaults.baseURL = \"http://localhost:9999\";\n// axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\nexport default axios;","import {axios} from '../../core';\n\nexport default {\n    getAll: () => axios.get(\"/dialogs\")\n}","import {dialogsApi} from \"../../utils/api\";\n\nconst actions = {\n    setDialogs: items => ({\n        type: 'DIALOGS:SET_ITEMS',\n        payload: items\n    }),\n    fetchDialogs: () => dispatch => {\n        dialogsApi.getAll().then(({data}) => {\n            dispatch(actions.setDialogs(data))\n        })\n    }\n};\n\nexport default actions;","import React, {useState, useEffect} from 'react';\nimport {connect} from \"react-redux\";\nimport {dialogsActions} from \"../redux/actions\";\nimport {Dialogs as BaseDialogs} from \"../components\";\n\nconst Dialogs = ({fetchDialogs, items, userId}) => {\n    const [inputValue, setValue] = useState(\"\");\n    const [filtred, setFiltredItems] = useState(Array.from(items));\n\n    const onChangeInput = value => {\n        setFiltredItems(items.filter(\n            dialog => dialog.user.fullname.toLowerCase().indexOf(value) >= 0\n            )\n        );\n        setValue(value)\n    };\n\n    useEffect(() => {\n        if (!items.length) {\n            fetchDialogs()\n        } else {\n            setFiltredItems(items)\n        }\n    }, [items]);\n\n    return (\n        <BaseDialogs items={filtred}\n                     onSearch={onChangeInput}\n                     inputValue={inputValue}\n                     userId={userId}\n        />\n    );\n};\n\nexport default connect(({dialogs}) => dialogs, dialogsActions)(Dialogs);\n","import React from 'react';\nimport {Icon, Button} from 'antd';\nimport './Home.scss'\nimport {ChatInput, Messages, Status} from \"../../components\";\nimport {Dialogs} from \"../../containers\";\n\nconst Home = () => (\n    <section className={'home'}>\n        <div className=\"chat\">\n            <div className=\"chat__sidebar\">\n                <div className=\"chat__sidebar-header\">\n                    <div>\n                        <Icon type=\"usergroup-add\"/>\n                        <span>Список диалогов</span>\n                    </div>\n                    <Button type={\"link\"} shape={\"circle\"} icon=\"form\"/>\n                </div>\n                <div className=\"chat__sidebar-dialogs\">\n                    <Dialogs userId={0}/>\n                </div>\n            </div>\n            <div className=\"chat__dialog\">\n                <div className=\"chat__dialog-header\">\n                    <div/>\n                    <div className=\"chat__dialog-header-center\">\n                        <p className=\"chat__dialog-username\">John Marchetty</p>\n                        <div className=\"chat__dialog-header-status\">\n                            <Status online={true}/>\n                        </div>\n                    </div>\n                    <Button type={\"link\"} shape={\"circle\"} icon=\"ellipsis\"/>\n                </div>\n                <div className=\"chat__dialog-messages\">\n                    <Messages />\n                </div>\n                <div className=\"chat__dialog-input\">\n                    <ChatInput/>\n                </div>\n            </div>\n        </div>\n    </section>\n);\n\nexport default Home;\n\n\n\n","import React, {Component} from 'react';\nimport {Route} from \"react-router-dom\";\nimport {Home, Auth} from \"./pages\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <Route exact path={[\"/\", \"/login\",\"/register\"]} component={Auth}/>\n                <Route exact path={\"/im\"} component={Home}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport store from \"./redux/store\";\nimport App from './App';\nimport './styles/index.scss';\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App/>\n        </Router>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}
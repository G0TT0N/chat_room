{"version":3,"sources":["assets/img/wave.svg","assets/img/play.svg","assets/img/pause.svg","assets/img/readed.svg","assets/img/noreaded.svg","components/Button/index.js","components/Block/index.js","components/Message/index.js","components/DialogItem/index.js","components/Time/index.js","components/IconReaded/index.js","components/Dialogs/index.js","utils/helper/validateField.js","modules/LoginForm/components/LoginForm.jsx","utils/validate.js","modules/LoginForm/index.js","modules/LoginForm/containers/LoginForm.js","modules/RegisterForm/components/RegisterForm.jsx","modules/RegisterForm/index.js","modules/RegisterForm/containers/RegisterForm.js","pages/Auth/index.jsx","pages/Home/index.jsx","App.js","index.js"],"names":["module","exports","Button","props","className","classNames","size","Block","children","Message","avatar","user","text","date","audio","isMe","isReaded","attachments","isTyping","useState","isPlaying","setIsPlaying","audioElem","useRef","useEffect","current","addEventListener","length","src","alt","fullname","ref","preload","onClick","volume","pause","play","pauseSvg","playSvg","waveSvg","map","item","url","filename","defaultProps","DialogItem","unreaded","created_at","ClassNames","isOnline","getAvatar","isToday","format","getMessageTime","Time","formatDistanceToNow","addSuffix","locale","ruLocale","IconReaded","readedSvg","noReadedSvg","Dialogs","items","userId","orderBy","key","_id","touched","errors","LoginForm","values","handleChange","handleBlur","handleSubmit","onSubmit","Item","validateStatus","validateField","help","email","hasFeedback","prefix","type","style","color","placeholder","id","value","onChange","onBlur","password","htmlType","to","isAuth","rules","test","Object","keys","forEach","withFormik","enableReinitialize","mapPropsToValues","validate","validateForm","setSubmitting","setTimeout","alert","JSON","stringify","displayName","RegisterForm","rePassword","Auth","exact","path","component","Home","Date","App","Component","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.d36eb475.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wave.2b8196a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.3a10db5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.a61933e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/readed.c1f419d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/noreaded.3c841bf6.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Button as BaseButton} from \"antd\";\nimport './Button.scss';\nimport classNames from 'classnames';\n\nconst Button = (props) => {\n    return (\n            <BaseButton\n                {...props}\n                className={classNames('button', props.className, {'button--large': props.size === 'large'})}\n            />\n    )\n};\n\nButton.propTypes = {\n    className: PropTypes.string\n};\n\nexport default Button;","import React from 'react';\nimport './Block.scss';\nimport classNames from 'classnames';\n\nconst Block = ({children, className}) => {\n    return (\n        <div className={classNames('block', className)}>\n            {children}\n        </div>\n    )\n};\n\n\n\nexport default Block;","import React, {useState, useRef, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport './Message.scss';\nimport classNames from 'classnames';\nimport {IconReaded, Time} from './../index'\nimport waveSvg from '../../assets/img/wave.svg';\nimport playSvg from '../../assets/img/play.svg';\nimport pauseSvg from '../../assets/img/pause.svg';\n\nconst Message = ({\n                     avatar,\n                     user,\n                     text,\n                     date,\n                     audio,\n                     isMe,\n                     isReaded,\n                     attachments,\n                     isTyping\n                 }) => {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const audioElem = useRef(null);\n\n    useEffect(() => {\n            audioElem.current.addEventListener('playing', () => {\n                setIsPlaying(true)\n            }, false);\n            audioElem.current.addEventListener('ended', () => {\n                setIsPlaying(false)\n            }, false);\n        }, []\n    );\n\n    const togglePlay = () => {\n        audioElem.current.volume = \"0.01\";\n        if(!isPlaying){\n            audioElem.current.play();\n        } else {\n            audioElem.current.pause();\n        }\n    };\n\n\n    return (\n        <div className={classNames(\"message\", {\n            \"message--isme\": isMe,\n            'message--is-typing': isTyping,\n            'message--is-audio': audio,\n            'message--image': attachments && attachments.length === 1\n        })}>\n            <div className=\"message__content\">\n                <IconReaded isMe={isMe} isReaded={isReaded}/>\n                <div className=\"message__avatar\">\n                    <img src={avatar} alt={`Avatar ${user.fullname}`}/>\n                </div>\n                <div className=\"message__info\">\n                    {(audio || text || isTyping) && (\n                        <div className=\"message__bubble\">\n                            {text && <p className=\"message__text\">{text}</p>}\n                            {isTyping && (\n                                <div className=\"message__typing\">\n                                    <span/>\n                                    <span/>\n                                    <span/>\n                                </div>\n                            )}\n                            {audio &&\n                            (<div className=\"message__audio\">\n                                    <audio ref={audioElem} src={audio} preload={'auto'}/>\n                                    <div className=\"message__audio-progress\"/>\n                                    <div className=\"message__audio-info\">\n                                        <div className=\"message__audio-btn\">\n                                            <button onClick={togglePlay}>\n                                                {isPlaying ? <img src={pauseSvg} alt=\"pause\"/>\n                                                    : <img src={playSvg} alt=\"play\"/>}\n                                            </button>\n                                        </div>\n                                        <div className=\"message__audio-wave\">\n                                            <img src={waveSvg} alt=\"wave\"/>\n                                        </div>\n                                        <span className='message__audio-duration'>00:11</span>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    )}\n                    {attachments &&\n                    <div className=\"message__attachments\">\n                        {attachments.map(item => (\n                            <div className=\"message__attachments-item\">\n                                <img src={item.url} alt={item.filename}/>\n                            </div>\n                        ))}\n                    </div>\n                    }\n\n                    {date && <span className=\"message__date\">\n                        <Time date={date}/>\n                    </span>}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nMessage.defaultProps = {\n    user: {}\n};\n\nMessage.propTypes = {\n    isMe: PropTypes.bool,\n    isReaded: PropTypes.bool,\n    avatar: PropTypes.string,\n    text: PropTypes.string,\n    date: PropTypes.string,\n    user: PropTypes.object,\n    attachments: PropTypes.array,\n    isTyping: PropTypes.bool,\n    audio: PropTypes.string,\n};\n\nexport default Message;","import React from 'react';\nimport ClassNames from 'classnames';\nimport './DialogItem.scss';\nimport {IconReaded} from './../index';\nimport format from 'date-fns/format';\nimport isToday from 'date-fns/isToday';\n\n\nconst getMessageTime = created_at => {\n    if (isToday(created_at)) {\n        return format(created_at, \"HH:mm\")\n    } else {\n        return format(created_at, \"dd.MM.yy\")\n    }\n\n};\n\nconst getAvatar = (avatar) => {\n    if (avatar) {\n        return (\n            <img src={avatar} alt=\"\"/>\n        )\n    } else {\n        // make ava\n    }\n};\n\nconst DialogItem = ({user, unreaded, isMe, created_at, text}) => (\n    <div className={ClassNames('dialogs__item', {\n        'dialogs__item--online': user.isOnline\n    })}>\n        <div className=\"dialogs__item-avatar\">\n            {/*<img src={user.avatar} alt={'user avatar'}/>*/}\n            {getAvatar(user.avatar)}\n        </div>\n        <div className=\"dialogs__item-info\">\n            <div className=\"dialogs__item-info-top\">\n                <b>{user.fullname}</b>\n                <span>\n                    {getMessageTime(created_at)}\n                </span>\n            </div>\n            <div className=\"dialogs__item-info-bottom\">\n                <p>{text}</p>\n                {isMe && <IconReaded isMe={true} isReaded={true}/>}\n                {unreaded > 0 &&\n                <div className=\"dialogs__item-info-bottom-count\">\n                    {unreaded}\n                </div>}\n            </div>\n        </div>\n    </div>\n);\n\nexport default DialogItem;\n\n\n","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\nimport ruLocale from 'date-fns/locale/ru';\n\nconst Time = ({date}) => (\n    <Fragment>\n        {formatDistanceToNow(date, {addSuffix: true, locale: ruLocale})}\n    </Fragment>\n);\n\nTime.propTypes = {\n    date: PropTypes.string\n};\n\nexport default Time;\n\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport readedSvg from \"./../../assets/img/readed.svg\";\nimport noReadedSvg from \"./../../assets/img/noreaded.svg\";\n\nconst IconReaded = ({isMe, isReaded}) =>\n    isMe && (\n        isReaded ? (\n            <img className={'message__icon-readed'}\n                 src={readedSvg}\n                 alt=\"readedSvg\"/>\n        ) : (\n            <img className={'message__icon-readed'}\n                 src={noReadedSvg}\n                 alt=\"noreadedSvg\"/>\n        ));\n\nIconReaded.propTypes = {\n    isMe: PropTypes.bool,\n    isReaded: PropTypes.bool,\n};\n\nexport default IconReaded;\n","import React from 'react';\nimport {DialogItem} from \"../index\";\nimport orderBy from 'lodash/orderBy';\n\n\nconst Dialogs = ({items, userId}) => (\n    <div className=\"dialogs\">\n        {orderBy(items, [\"created_at\"], [\"desc\"])\n            .map(item => (\n                <DialogItem\n                    key={item._id}\n                    isMe={item.user._id === userId}\n                    {...item}\n                />\n            ))}\n    </div>\n);\n\nexport default Dialogs;\n\n\n","export default (key, touched, errors) => {\n    if (touched[key]){\n        if (errors[key]) {\n            return 'error'\n        } else {\n            return 'success'\n        }\n    } else {\n        return ''\n    }\n};","import React from 'react';\nimport {Form, Icon, Input} from 'antd';\nimport {Link} from 'react-router-dom';\nimport {Block, Button} from \"../../../components\";\nimport {validateField} from \"../../../utils/helper\";\n\nconst LoginForm = (props) => {\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n    } = props;\n    return (\n        <div>\n            <div className={'auth__top'}>\n                <h2>Войти в аккаунт</h2>\n                <p>Пожалуйста, войдите в свой аккаунт</p>\n            </div>\n            <Block>\n                <Form onSubmit={handleSubmit} className=\"login-form\">\n                    <Form.Item\n                        validateStatus={validateField('email', touched, errors)}\n                        help={!touched.email ? '' : errors.email}\n                        hasFeedback\n                    >\n                        <Input\n                            prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                            placeholder=\"Username\"\n                            size=\"large\"\n                            id={'email'}\n                            value={values.email}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        validateStatus={validateField('password', touched, errors)}\n                        help={!touched.password ? '' : errors.password}\n                        hasFeedback\n                    >\n                        <Input\n                            prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                            type=\"password\"\n                            placeholder=\"Пароль\"\n                            size=\"large\"\n                            id={'password'}\n                            value={values.password}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" size={'large'}>\n                            Войти в аккаунт\n                        </Button>\n                    </Form.Item>\n                    <Link className={'auth__register-link'} to={'/register'}>\n                        Зарегистрироваться\n                    </Link>\n                </Form>\n            </Block>\n        </div>\n    )\n};\n\nexport default LoginForm;","export default ({isAuth, values, errors}) => {\n    const rules = {\n        email: (value) => {\n            if (!value) {\n                errors.email = 'Введите адрес';\n            } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n                errors.email = 'Введите корректный адрес';\n            }\n        },\n        password: (value) => {\n            if (!value) {\n                errors.password = 'Введите пароль';\n            } else if (!/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}/i.test(value)) {\n                errors.password = isAuth ? 'Неверный пароль' : 'Слишком легкий пароль';\n            }\n        },\n        /*rePassword: (value, values) => {\n            if (!value) {\n                errors.rePassword = 'Введите пароль';\n            }\n            if (values.password !== value) {\n                errors.rePassword = 'Пароли не совпадают';\n            }\n        }*/\n    };\n\n    Object.keys(values).forEach(key => // достаем все ключи из объекта и прменяем для каждого функцию\n        rules[key] && rules[key](values[key]) // если такой ключ есть, то применить функцию\n    )\n};","import LoginForm from './containers/LoginForm';\n\nexport default LoginForm","import {withFormik} from 'formik';\nimport LoginForm from '../components/LoginForm';\nimport validateForm from '../../../utils/validate';\n\n\nexport default withFormik({\n    enableReinitialize: true,\n    mapPropsToValues: () => ({\n        email: '',\n        password: '',\n    }),\n    validate: values => {\n        let errors = {};\n\n        validateForm({isAuth: false, values, errors});\n\n        return errors;\n    },\n\n    handleSubmit: (values, {setSubmitting}) => {\n        setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n        }, 1000);\n    },\n\n    displayName: 'RegisterForm',\n})(LoginForm);\n\n","import React from 'react';\nimport {Form, Icon, Input} from 'antd';\nimport {Link} from 'react-router-dom';\nimport {Block, Button} from \"../../../components\";\nimport {validateField} from \"../../../utils/helper\";\n\nconst success = false;\n\nconst RegisterForm = (props) => {\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n    } = props;\n    return (\n        <div>\n            <div className={'auth__top'}>\n                <h2>Регистрация</h2>\n                <p>Для входа в чат, вам нужно зарегистрироваться</p>\n            </div>\n            <Block>\n                {!success\n                    ? (\n                        <Form onSubmit={handleSubmit} className=\"login-form\">\n                            <Form.Item\n                                validateStatus={validateField('email', touched, errors)}\n                                help={!touched.email ? '' : errors.email}\n                                hasFeedback\n                            >\n                                <Input\n                                    id={'email'}\n                                    prefix={<Icon type=\"mail\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    placeholder=\"E-mail\"\n                                    size=\"large\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                            </Form.Item>\n                            <Form.Item>\n                                <Input\n                                    prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    placeholder=\"Ваше имя\"\n                                    size=\"large\"\n                                />\n                            </Form.Item>\n                            <Form.Item\n                                validateStatus={validateField('password', touched, errors)}\n                                help={!touched.password ? '' : errors.password}\n                                hasFeedback\n                            >\n                                <Input\n                                    prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    type=\"password\"\n                                    placeholder=\"Пароль\"\n                                    size=\"large\"\n                                    id={'password'}\n                                    value={values.password}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                            </Form.Item>\n                            <Form.Item\n                                validateStatus={validateField('password', touched, errors)}\n                                help={!touched.password ? '' : errors.password}\n                                hasFeedback\n                            >\n                                <Input\n                                    prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    type=\"password\"\n                                    placeholder=\"Повторите пароль\"\n                                    size=\"large\"\n                                    // id={'rePassword'}\n                                    // value={values.rePassword}\n                                    // onChange={handleChange}\n                                    // onBlur={handleBlur}\n                                />\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\"\n                                        htmlType=\"submit\"\n                                        size={'large'}\n                                        onClick={handleSubmit}\n                                >\n                                    Зарегистрироваться\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Link className={'auth__register__link'} to={'/login'}>Войти в аккаунт</Link>\n                            </Form.Item>\n                        </Form>)\n                    : <div className={'auth__success-block'}>\n                        <div>\n                            <Icon style={{fontSize: '48px'}} type=\"exclamation-circle\" theme=\"twoTone\"/>\n                        </div>\n                        <h2>Подтвердите свой аккаунт</h2>\n                        <p>На вашу почту отправлено письмо со ссылкой на подтверждение аккаунта</p>\n                    </div>}\n            </Block>\n        </div>\n    )\n};\n\nexport default RegisterForm;","import RegisterForm from './containers/RegisterForm';\n\nexport default RegisterForm","import {withFormik} from 'formik';\nimport RegisterForm from '../components/RegisterForm';\nimport validateForm from '../../../utils/validate';\n\n\nexport default withFormik({\n    enableReinitialize: true,\n    mapPropsToValues: () => ({\n        email: '',\n        fullname: '',\n        password: '',\n        rePassword: ''\n    }),\n    validate: values => {\n        let errors = {};\n\n        validateForm({isAuth: false, values, errors});\n\n        return errors;\n    },\n\n    handleSubmit: (values, {setSubmitting}) => {\n        setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n        }, 1000);\n    },\n\n    displayName: 'RegisterForm',\n})(RegisterForm);","import React from 'react';\nimport {Route} from \"react-router-dom\";\nimport {LoginForm, RegisterForm} from \"../../modules\";\nimport './Auth.scss'\n\nconst Auth = () => {\n    return (\n        <section className={'auth'}>\n            <div className={'auth__content'}>\n                <Route exact path={[\"/\", \"/login\"]} component={LoginForm}/>\n                <Route exact path={'/register'} component={RegisterForm}/>\n            </div>\n        </section>\n    )\n};\n\nexport default Auth;\n\n\n\n\n","import React from 'react';\nimport './Home.scss'\nimport {Dialogs, Message} from \"../../components\";\n\n\nconst Home = () => (\n    <section className={'home'}>\n        <Dialogs\n            userId={0}\n            items={[\n                {\n                    text: 'Hello 1',\n                    isReaded: false,\n                    created_at: new Date(2019, 8, 10, 11, 11),\n                    user: {\n                        _id: 1,\n                        fullname: 'Name 1',\n                        avatar: null,\n                    }\n                },\n                {\n                    text: 'Hello 2',\n                    isReaded: true,\n                    created_at: new Date(),\n                    user: {\n                        _id: 2,\n                        fullname: 'Name 2',\n                        avatar: null,\n                    }\n                }\n            ]}\n        />\n        <Message avatar={'https://sun1-87.userapi.com/c852016/v852016997/1b674f/ybYJetYzEIk.jpg?ava=1'}\n                 isMe={''}\n                 date={new Date()}\n                 audio={'https://notificationsounds.com/soundfiles/069059b7ef840f0c74a814ec9237b6ec/file-de_vuvuzela-power-down.wav'}\n        />\n        {/*<Message avatar={'https://sun1-87.userapi.com/c852016/v852016997/1b674f/ybYJetYzEIk.jpg?ava=1'}\n                 text={'Салам, Брут! Чё, как, уничтожил флот галлов? 🖐🏻'}\n                 date={new Date()}\n                 attachments={[\n                     {\n                         falename: 'image.jpg',\n                         url: 'http://source.unsplash.com/100x100/?random-1&nature,water'\n                     },\n                     {\n                         falename: 'image.jpg',\n                         url: 'http://source.unsplash.com/100x100/?random-2&nature,water'\n                     },\n                     {\n                         falename: 'image.jpg',\n                         url: 'http://source.unsplash.com/100x100/?random-3&nature,water'\n                     }\n                 ]}\n                 isMe={''}\n\n        />\n        <Message avatar={'https://sun9-38.userapi.com/c846321/v846321172/10d6d6/eWA_JGAyu68.jpg?ava=1'}\n                 text={'Салам, брат Цезарь!'}\n                 date={new Date()}\n                 isMe={true}\n                 isReaded={false}\n\n        />\n        <Message avatar={'https://sun1-87.userapi.com/c852016/v852016997/1b674f/ybYJetYzEIk.jpg?ava=1'}\n                 attachments={[\n                     {\n                         falename: 'image.jpg',\n                         url: 'http://source.unsplash.com/100x100/?random-1&nature,water'\n                     }\n                 ]}\n                 isMe={''}\n        />\n        <Message avatar={'https://sun1-87.userapi.com/c852016/v852016997/1b674f/ybYJetYzEIk.jpg?ava=1'}\n                 isTyping\n                 isMe={''}\n        />*/}\n    </section>\n);\n\n\nexport default Home;\n\n\n\n","import React, {Component} from 'react';\nimport {Route} from \"react-router-dom\";\nimport {Home, Auth} from \"./pages\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <Route exact path={[\"/\", \"/login\",\"/register\"]} component={Auth}/>\n                <Route exact path={\"/im\"} component={Home}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, HashRouter} from \"react-router-dom\";\nimport App from './App';\nimport './styles/index.scss';\n\nReactDOM.render(<HashRouter basename={process.env.PUBLIC_URL}><App/></HashRouter>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}